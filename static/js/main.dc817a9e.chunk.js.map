{"version":3,"sources":["components/UserSearch/UserSearch.js","components/SearchResult/UserCard.js","components/SearchResult/UserDetailList.js","App.js","reportWebVitals.js","index.js"],"names":["UserSearch","props","useState","userName","setUserName","onSubmit","handleSearch","a","className","Row","Col","xs","type","placeholder","value","onChange","e","target","Button","variant","onClick","UserCard","profile","index","src","avatar_url","alt","href","html_url","login","score","UserDetailList","profileList","setProfileList","currentPage","setCurrentPage","totalCount","setTotleCount","isError","setIsError","useEffect","Axios","get","resp","total_count","data","items","pageCount","Math","ceil","length","map","id","previousLabel","nextLabel","onPageChange","selectedPage","selected","marginPagesDisplayed","containerClassName","previousClassName","pageClassName","nextClassName","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc817a9e.chunk.js","sourcesContent":["import React,{ useState } from 'react';\r\nimport {Row, Col, Button} from 'react-bootstrap';\r\n\r\nimport './UserSearch.css';\r\n\r\n\r\nconst UserSearch = (props) =>{\r\n\r\n    const [userName, setUserName]= useState();\r\n    const { onSubmit } = props;\r\n   \r\n    const handleSearch = async () => {\r\n        onSubmit(userName);\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"py-6 my-6 px-4 px-md-6 mx-md-6 boxMargin\">\r\n            <Row>\r\n                <Col xs={6} >\r\n                    <input\r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Search GitHub\"  \r\n                        value = {userName}\r\n                        onChange = {(e) => setUserName(e.target.value)}\r\n                        />             \r\n                </Col>\r\n                <Col xs={1}>\r\n                    <Button \r\n                        variant=\"primary\" \r\n                        type=\"submit\"\r\n                        onClick={handleSearch}\r\n                        >\r\n                            Search\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserSearch;","import React from 'react';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport './UserCard.css';\r\n\r\nconst UserCard = (props) => {\r\n    const {profile, index} = props;\r\n    \r\n    if (!profile) return null;\r\n    \r\n    return(\r\n        <div>\r\n            <Row className=\"border-bottom py-2\" key={index}>\r\n                <Col xs={3}>\r\n                    <img className=\"ProfilePicture\" src={profile.avatar_url} alt=\"Profile Picture\" />\r\n                </Col>\r\n                <Col xs={9}>\r\n                    <Row>\r\n                        <a href={profile.html_url} target=\"_blank\" >{profile.login}</a>\r\n                    </Row>\r\n                    <Row>\r\n                        score: {profile.score}\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n           \r\n        </div>\r\n    )\r\n\r\n}\r\nexport default UserCard;","import React, {useState, useEffect} from 'react';\r\nimport UserCard from './UserCard';\r\nimport ReactPaginate from 'react-paginate';\r\nimport Axios from 'axios';\r\nimport './UserCard.css';\r\n\r\nconst PER_PAGE = 5;\r\n\r\nconst UserDetailList = (props) =>{\r\n    \r\n    const {userName} = props; \r\n    const [profileList , setProfileList] = useState({});\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalCount, setTotleCount] = useState(0);\r\n    const [isError, setIsError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(userName)\r\n        handleSearch();\r\n    }, [userName,currentPage]);\r\n\r\n    const handleSearch = async () => {\r\n        try {\r\n            const resp = await Axios.get(`https://api.github.com/search/users?q=${userName}&per_page=${PER_PAGE}&page=${currentPage}`);\r\n            \r\n            const total_count = resp.data.total_count <= 1000 ? resp.data.total_count : 1000;\r\n            \r\n            setTotleCount(total_count);\r\n            setProfileList(resp.data.items);\r\n            \r\n        } catch (error) {\r\n            setProfileList(\"\");\r\n            setIsError(true);\r\n        }\r\n    }\r\n\r\n    const pageCount = Math.ceil(totalCount / PER_PAGE);\r\n\r\n    function handlePageClick({ selected: selectedPage }) {\r\n        setCurrentPage(selectedPage);\r\n    }\r\n\r\n    \r\n    return(\r\n        <div>\r\n            {\r\n                isError && \r\n                <div> Something went wrong!! Please refresh </div>\r\n            }\r\n            { \r\n                !isError && profileList && profileList.length ===0 &&\r\n                    <div> No result found for this search!</div>\r\n            }\r\n            { !isError && profileList && profileList.length >0  &&\r\n                <div>\r\n                   \r\n                    { profileList.map((profile, index) => (\r\n                        <UserCard profile={profile} key ={profile.id}></UserCard>\r\n                    ))\r\n                    }\r\n\r\n                    <ReactPaginate\r\n                        previousLabel={\"← Previous\"}\r\n                        nextLabel={\"Next →\"}\r\n                        pageCount={pageCount}\r\n                        onPageChange={handlePageClick}\r\n                        marginPagesDisplayed={3}\r\n                        containerClassName={\"pagination\"}\r\n                        previousClassName={\"pagination__link\"}\r\n                        pageClassName={\"pagination__link\"}\r\n                        nextClassName={\"pagination__link\"}\r\n                        // disabledClassName={\"pagination__link--disabled\"}\r\n                        // activeClassName={\"pagination__link--active\"}\r\n                    />\r\n            \r\n            <div className=\"Count\"> Total Records: {totalCount} </div> \r\n                </div>\r\n                \r\n            }\r\n\r\n            \r\n        </div>\r\n        \r\n    )\r\n} \r\n\r\nexport default UserDetailList;\r\n\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport UserSearch from './components/UserSearch/UserSearch';\nimport UserDetailList from './components/SearchResult/UserDetailList';\nimport { Container} from 'react-bootstrap';\n\nconst App = () => {\n  \n  const [userName, setUserName]= useState(\"\");\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>Search users</h2>\n      </header>\n      <Container>\n        <UserSearch onSubmit={setUserName}  />\n        { userName !==\"\" &&\n          <UserDetailList userName ={userName} />\n        }\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}